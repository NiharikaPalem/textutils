{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Home","role","placeholder","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","slass","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","newtext","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setAlert","showAlert","message","setTimeout","_useState3","_useState4","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cf5129b4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                {props.Home}\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                {props.Home}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/About\">\r\n                About\r\n              </Link> */}\r\n              <a className=\"nav-link\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n          <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} \r\n          htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n              \r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  Home: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Enter your title\",\r\n  Home: \"This is home\",\r\n};\r\n","import React ,{useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n\r\n  const handleUpclick =()=>{\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext)\r\n    props.showalert(\"Converted to Uppercase\",\"success\")\r\n  }\r\n\r\n  const handleLowclick =()=>{\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext)\r\n    props.showalert(\"Converted to Lowercase\",\"success\")\r\n  }\r\n\r\n  \r\n  const handleClear =()=>{\r\n    console.log(\"Text is cleared\" + text);\r\n    let newtext = \"\";\r\n    setText(newtext)\r\n    props.showalert(\"Text is cleared\",\"success\")\r\n  }\r\n\r\n  const handleCopy =()=>{\r\n    console.log(\"I am copy\");\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n    props.showalert(\"Text is copied\",\"success\")\r\n  }\r\n\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n\r\n  }\r\n  const handleExtraSpaces =()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '))\r\n    props.showalert(\"Excess spaces are removed\",\"success\")\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  const[text,setText] = useState(\"Enter text here\")\r\n  \r\n  return (\r\n    <>\r\n    <div slass=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <form>\r\n        <h1 className =\"my-5\">{props.heading}</h1>\r\n        <div className=\"form-group\">\r\n          <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} value ={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <button className =\"btn btn-primary my-3 mx=3\" onClick ={handleUpclick} >Convert to uppercase </button>\r\n    <button className =\"btn btn-primary my-3 mx-3\" onClick ={handleLowclick} >Convert to Lowercase </button>\r\n    <button className =\"btn btn-primary my-3 mx-3\" onClick ={handleClear} >Clear text </button>\r\n    <button className =\"btn btn-primary my-3 mx-3\" onClick ={handleCopy} >Copy Text </button>\r\n    <button className =\"btn btn-primary my-3 mx-3\" onClick ={handleExtraSpaces} >Remove Extra Spaces </button>\r\n   \r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008*text.split(\" \").length} minutes to read this content</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    \r\n      props.alert && <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n      </div>\r\n    \r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\nimport React from \"react\";\n// import { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils\" + \" Dark mode enabled\";\n\n      // setInterval(()=>{\n      //   document.title =\"Install textUtils now\"\n      // } ,2000);\n\n      // setInterval(()=>{\n      //   document.title =\"textUtils is amazing\"\n      // } ,800);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils\" + \" Light mode enabled\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          Home=\"Home\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About/>} />\n\n            <Route exact\n              path=\"/\"\n              element={ */}\n                <Textform heading=\"Enter the text to analyse: \" mode={mode} showalert={showAlert} />\n              {/* }\n            />\n          </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}